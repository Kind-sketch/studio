rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to update their own profile
      allow update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Products collection
    match /products/{productId} {
      // Allow public read access to products
      allow read: if true;
      
      // Allow authenticated artisans to create products
      allow create: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'artisan';
      
      // Allow product owners to update their products
      allow update: if request.auth != null && 
        resource.data.artisanId == request.auth.uid;
      
      // Allow product owners to delete their products
      allow delete: if request.auth != null && 
        resource.data.artisanId == request.auth.uid;
    }
    
    // Orders collection
    match /orders/{orderId} {
      // Allow buyers to read their own orders
      allow read: if request.auth != null && 
        resource.data.buyerId == request.auth.uid;
      
      // Allow artisans to read orders for their products
      allow read: if request.auth != null && 
        resource.data.artisanId == request.auth.uid;
      
      // Allow authenticated buyers to create orders
      allow create: if request.auth != null;
      
      // Allow order parties to update order status
      allow update: if request.auth != null && 
        (resource.data.buyerId == request.auth.uid || 
         resource.data.artisanId == request.auth.uid);
    }
    
    // Sponsors collection
    match /sponsors/{sponsorId} {
      // Allow sponsors and artisans to read relevant sponsorships
      allow read: if request.auth != null && 
        (resource.data.sponsorId == request.auth.uid || 
         resource.data.artisanId == request.auth.uid);
      
      // Allow authenticated sponsors to create sponsorships
      allow create: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'sponsor';
      
      // Allow sponsors to update their sponsorships
      allow update: if request.auth != null && 
        resource.data.sponsorId == request.auth.uid;
    }
  }
}