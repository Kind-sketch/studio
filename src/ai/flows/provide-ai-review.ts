// This file is machine-generated - edit at your own risk.

'use server';

/**
 * @fileOverview Provides an AI review of a product's performance based on data analytics and LLM analysis.
 *
 * - provideAiReview - A function that provides the AI review.
 * - ProvideAiReviewInput - The input type for the provideAiReview function.
 * - ProvideAiReviewOutput - The return type for the provideAiReview function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { translateText } from '@/services/translation-service';

const ProvideAiReviewInputSchema = z.object({
  productDescription: z.string().describe('The description of the product.'),
  productStory: z.string().describe('The story behind the product.'),
  likes: z.number().describe('The number of likes the product has received.'),
  shares: z.number().describe('The number of shares the product has received.'),
  revenue: z.number().describe('The revenue generated by the product.'),
  targetedAudience: z
    .string()
    .describe(
      'A description of the targeted audience who have bought this product.'
    ),
  targetLanguage: z.string().describe("The target language for the generated review, specified as a two-letter language code (e.g., 'en', 'hi')."),
});

export type ProvideAiReviewInput = z.infer<typeof ProvideAiReviewInputSchema>;

const ProvideAiReviewOutputSchema = z.object({
  review: z
    .string()
    .describe(
      'An AI-generated review of the product performance, including suggestions for improvement.'
    ),
});

export type ProvideAiReviewOutput = z.infer<typeof ProvideAiReviewOutputSchema>;

export async function provideAiReview(
  input: ProvideAiReviewInput
): Promise<ProvideAiReviewOutput> {
  return provideAiReviewFlow(input);
}

const provideAiReviewPrompt = ai.definePrompt({
  name: 'provideAiReviewPrompt',
  input: {schema: ProvideAiReviewInputSchema},
  output: {schema: ProvideAiReviewOutputSchema},
  prompt: `You are an AI assistant providing a review of a product's performance for the artisan.

  Based on the following data, provide a review with suggestions for improvement in English:

  Product Description: {{{productDescription}}}
  Product Story: {{{productStory}}}
  Likes: {{{likes}}}
  Shares: {{{shares}}}
  Revenue: {{{revenue}}}
  Targeted Audience: {{{targetedAudience}}}

  Provide a concise review with specific and actionable suggestions for the artisan to improve their product and marketing strategies.
`,
});

const provideAiReviewFlow = ai.defineFlow(
  {
    name: 'provideAiReviewFlow',
    inputSchema: ProvideAiReviewInputSchema,
    outputSchema: ProvideAiReviewOutputSchema,
  },
  async input => {
    const {output} = await provideAiReviewPrompt(input);
    if (!output) {
      throw new Error('Failed to generate AI review.');
    }

    if (input.targetLanguage && input.targetLanguage !== 'en') {
        const { translatedTexts } = await translateText({ texts: [output.review], targetLanguage: input.targetLanguage });
        if (translatedTexts && translatedTexts.length > 0 && translatedTexts[0]) {
          return { review: translatedTexts[0] };
        }
    }
    
    return output;
  }
);
